{"version":3,"sources":["Homework1-Todolist/Input.js","Homework1-Todolist/List.js","Homework1-Todolist/TodoList.js","components/List.js","components/Buttons.js","pages/context.js","pages/Home.js","components/Control.js","pages/Demo02.js","pages/Demo01.js","pages/Hoc.js","pages/App.js","index.js"],"names":["Input","props","value","inpValue","type","onChange","handleChange","onClick","addTodo","List","arr1","length","renderTodos","arr2","TodoList","e","setState","target","state","todos","title","done","delTodo","idx","filter","item","index","toggle","newTodos","JSON","parse","stringify","map","todo","checked","dangerouslySetInnerHTML","__html","localStorage","getItem","this","setItem","className","Component","data","key","id","Buttons","getData","Context","React","createContext","Demo02","Consumer","changeData","Demo01","style","width","height","defaultProps","name","withFetch","Com","url","Topic","fetch","then","res","json","displayName","content","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c841f092.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Input = (props)=>{\r\n    return <div>\r\n     <input \r\n        value={props.inpValue} \r\n        type=\"text\" \r\n        onChange={props.handleChange}\r\n     />\r\n       <button onClick={props.addTodo}>添加</button>\r\n    </div>\r\n}\r\nexport default Input;\r\n      ","import React from 'react';\r\n\r\nconst List = (props)=>{\r\n    return <div>\r\n                <h2>正在进行{props.arr1.length}</h2>\r\n                <ul>\r\n                    {props.renderTodos(false)}\r\n                </ul>\r\n                <h2>已经完成{props.arr2.length}</h2>\r\n                <ul>\r\n                    {props.renderTodos(true)}\r\n                </ul>\r\n    </div>\r\n}\r\nexport default List;","import React, { Component } from 'react';\r\nimport Input from './Input';\r\nimport List from './List';\r\n\r\n\r\n// 组件名首字母一定要大写\r\nclass TodoList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue: '',\r\n            todos:[]\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        // this.input.focus();\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos: JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    addTodo = ()=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''})\r\n\r\n    }\r\n    delTodo = (idx)=>{\r\n        this.setState({\r\n            todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        });\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return <li>\r\n                    <input \r\n                        onClick={()=>this.toggle(idx)}\r\n                        checked={done} \r\n                        type=\"checkbox\"\r\n                    />\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button \r\n                        onClick={()=>this.delTodo(idx)}\r\n                    >\r\n                        删除\r\n                    </button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        \r\n        const {todos,inpValue} = this.state;\r\n        let arr1 = todos.filter( item => !item.done)\r\n        let arr2 = todos.filter( item => item.done)\r\n        // console.log(arr1);\r\n        return (\r\n            <div className=\"box\">\r\n                <Input inpValue={inpValue} addTodo={this.addTodo} handleChange={this.handleChange}/>\r\n                <List addTodo={this.addTodo} arr1={arr1} arr2={arr2} renderTodos={this.renderTodos}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nlet List = (props)=>{\r\n    return <ul>\r\n      {\r\n        props.data.map(\r\n          (item)=><li key={item.id}>{item.title}</li>\r\n        )\r\n      }\r\n    </ul>\r\n}\r\nexport default List;","import React from 'react';\r\n\r\nconst Buttons = (props)=>{\r\n    const btns = [1,2,3,4,5];\r\n    return <div>\r\n        {\r\n            btns.map(\r\n              (item)=>(\r\n                <button \r\n                  key={item}\r\n                  onClick={()=>props.getData(item)}\r\n                >\r\n                  {item}\r\n                </button>\r\n            ))\r\n        }\r\n    </div>\r\n}\r\nexport default Buttons;","import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;","import React,{Component} from 'react';\r\nimport List from '../components/List';\r\nimport Buttons from '../components/Buttons';\r\n\r\nclass Home extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        data:[]\r\n      }\r\n      // this.handleClick = this.handleClick.bind(this)\r\n    }\r\n    componentDidMount(){\r\n      fetch('https://cnodejs.org/api/v1/topics')\r\n      .then(res=>res.json())\r\n      .then( ({data}) => {\r\n        this.setState({data})\r\n      })\r\n    }\r\n    getData = (page)=>{\r\n      fetch('https://cnodejs.org/api/v1/topics?page='+page)\r\n      .then(res=>res.json())\r\n      .then( ({data}) => {\r\n        this.setState({data})\r\n      })\r\n    }\r\n    render(){\r\n      const { data } = this.state;\r\n      return <div>\r\n        <Buttons getData={this.getData}/>\r\n        <List data={data}/>\r\n      </div>\r\n    }\r\n}\r\n//默认导出（当前文件只能默认导出一个，不能写两个export）\r\nexport default Home;\r\n// // 命名导出\r\n// let a = 100;\r\n// export {Home}\r\n// export {a}\r\n//命名导出\r\n// export {Home}\r\n\r\n","import React, { Component } from 'react';\r\nimport './control.css';\r\n\r\n\r\n// 组件名首字母一定要大写\r\nclass Control extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue: '',\r\n            todos:[]\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        // this.input.focus();\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos: JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    addTodo = ()=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''})\r\n\r\n    }\r\n    delTodo = (idx)=>{\r\n        // let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        // newTodos.splice(idx,1);\r\n        // this.setState({todos:newTodos});\r\n        this.setState({\r\n            todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        });\r\n        // setState 是异步执行的，注意callback的用法\r\n        // this.setState({\r\n        //     todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        // },()=>{\r\n        //     localStorage.setItem(\r\n        //         'todos',\r\n        //         JSON.stringify(this.state.todos)\r\n        //     )\r\n        // });\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return <li>\r\n                    <input \r\n                        onClick={()=>this.toggle(idx)}\r\n                        checked={done} \r\n                        type=\"checkbox\"\r\n                    />\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button \r\n                        onClick={()=>this.delTodo(idx)}\r\n                    >\r\n                        删除\r\n                    </button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        \r\n        const {todos,inpValue} = this.state;\r\n        let arr1 = todos.filter( item => !item.done)\r\n        // console.log(arr1);\r\n        return (\r\n            <div className=\"box\">\r\n                <label htmlFor=\"inp\">todolist</label>\r\n                <input \r\n                    id='inp'\r\n                    ref={inp=>this.input = inp}\r\n                    value={inpValue} \r\n                    type=\"text\" \r\n                    onChange={this.handleChange}\r\n                />\r\n                <button onClick={this.addTodo}>添加</button>\r\n                <h2>正在进行{arr1.length}</h2>\r\n                <ul>\r\n                    {this.renderTodos(false)}\r\n                </ul>\r\n                <h2>已经完成</h2>\r\n                <ul style={{color:3<2?'red':'green'}}>\r\n                    {this.renderTodos(true)}\r\n                </ul>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Control;\r\n\r\n// 条件渲染\r\n// {\r\n//     3>21\r\n//     ?<button>登录</button>\r\n//     :<span>hello</span>\r\n// }\r\n\r\n// <button>{2>3?'登录':'注册'}</button>","import React from 'react'\r\nimport Context from './context'\r\n\r\nconst Demo02 = () => {\r\n    return (\r\n        <div>\r\n            <h2>Demo02</h2>\r\n            <Context.Consumer>\r\n                {\r\n                    ({data})=>data.map(item=><li key={item}>{item}</li>)\r\n                }\r\n            </Context.Consumer>\r\n            <Context.Consumer>\r\n                {\r\n                    ({changeData})=><button onClick={()=>changeData(123)}>点击</button>\r\n                }\r\n            </Context.Consumer>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Demo02","\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from './context'\r\nimport Demo02 from './Demo02'\r\n\r\nconst Demo01 = (props) => {\r\n    return (\r\n        <div style={{\r\n            width:100,\r\n            height:100,\r\n        }}>\r\n            <h2>Demo01</h2>\r\n            <ul>\r\n                <Context.Consumer>\r\n                    {\r\n                        ({data})=>data.map(\r\n                            item=><li key={item}>{item}</li>\r\n                        )\r\n                    }\r\n                </Context.Consumer>\r\n            </ul>\r\n            <Demo02 />\r\n        </div>\r\n    )\r\n}\r\n\r\nDemo01.propTypes = {\r\n    name: PropTypes.string.isRequired\r\n}\r\n\r\nDemo01.defaultProps = {\r\n    name: 'tom'\r\n}\r\n\r\nexport default Demo01\r\n// rcc\r\n// rafc\r\n// rafce\r\n","// higher order component\r\nimport React, { Component } from 'react';\r\n\r\nconst withFetch = (Com,url)=>{\r\n    class Topic extends Component{\r\n        constructor(){\r\n            super();\r\n            this.state = {\r\n                data:[]\r\n            }\r\n        }\r\n        componentDidMount(){\r\n            fetch(url)\r\n            .then(res=>res.json())\r\n            .then(res=>this.setState({data:res.data}))\r\n        }\r\n        render(){\r\n            return <Com {...this.props} data={this.state.data}/>\r\n        }\r\n    }\r\n    Topic.displayName= `withFetch(${Com.name})`\r\n    return Topic;\r\n}\r\n\r\nconst De = (props)=>{\r\n    return <div>\r\n        <h1>标题{props.name}</h1>\r\n        <div dangerouslySetInnerHTML={\r\n            {__html:props.data.content}}\r\n        >\r\n        </div>\r\n    </div>\r\n}\r\nexport const Detail = withFetch(De,'https://cnodejs.org/api/v1/topic/5433d5e4e737cbe96dcef312');\r\n\r\nconst Ho = (props)=>{\r\n    return <ul>\r\n        {\r\n            props.data.map((item)=><li>{item.title}</li>)\r\n        }\r\n    </ul>\r\n}\r\nconst Hoc = withFetch(Ho,'https://cnodejs.org/api/v1/topics')\r\nexport default Hoc;","import React from 'react'\r\nimport Context from './context'\r\nimport Demo01 from './Demo01';\r\n\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            data:['hello','context'],\r\n        }\r\n    }\r\n    changeData = (newData)=>{\r\n        this.setState({data:[...this.state.data,newData]})\r\n    }\r\n    render(){\r\n        return (\r\n            <Context.Provider value={{\r\n                data:this.state.data,\r\n                changeData:this.changeData\r\n            }}>\r\n                <Demo01 />\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './Homework1-Todolist/TodoList';\nimport Home from './pages/Home';\nimport Control from './components/Control';\n// import Demo01 from './pages/Demo01';\nimport App from './pages/App';\nimport Hoc,{Detail} from './pages/Hoc';\nimport Hook from './pages/Hook'\nimport Context from './pages/context'\nconsole.log(Context);\n\nReactDOM.render(\n  <TodoList />,\n  document.getElementById('root')\n);\n\n\n// 实现带有本地存储的todolist功能（类组件实现）：\n\n// 最外层index.js里render(<TodoList/>,xx)\n// TodoList组件里包含Input和List两个组件\n// 输入框输入时不进行本地存储（使用componentDidUpdate）\n\n// 写完进行npm run build,将打包完的静态传到github，\n// 设置github pages，雪梨提交网页链接和四个文件的代码\n\n\n\n\n\n// alt shift + 上下键   复制一行\n// alt + 上下键         移动一行\n// 按住alt ，鼠标点击\n// Ctrl + shift + 左右键，选中整个单词\n// ctrl+shift+L \n\n// 组件声明\n// 函数组件\n// UI（展示）组件，木偶组件\n// function App(props){\n//   const { title, id } = props;\n//   return <div>\n//     <h1>App组件内容</h1>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n// // 智能组件\n// class Demo extends React.Component{\n//   constructor(){\n//      super();\n//     //  声明状态\n//      this.state = {\n//        name: new Date().toLocaleString()\n//      }\n//      setInterval(()=>{\n//       this.setState({name:new Date().toLocaleString()})\n//      },1000)\n//   }\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title={this.state.name} id='app'/>\n//     </div>\n//   }\n// }\n\n\n\n\n\n// let ele = React.createElement(\n//   'h1',\n//   {id:'title'},\n//   React.createElement('div',{},'hello'),\n//   'react'\n// )\n\n// 将jsx对象渲染到DOM中\n// let ReactDOM = {\n//   render(eleObj,container){\n//     // 解构\n//     const { type,props } = eleObj;\n//     // 创建第一层节点\n//     let ele = document.createElement(type);\n//     // 遍历属性对象，将属性添加到第一层节点对象上\n//     for (const prop in props) {\n//       console.log(prop)\n//       if(prop == 'children'){\n//         if(typeof props.children == 'string'){\n//             const txtNode = document.createTextNode(props.children);\n//             ele.appendChild(txtNode);\n//             break;\n//         }\n//         // 将第一层节点对象的子元素添加进去\n//         props.children.forEach( child => {\n//           if(typeof child == 'string'){\n//             const txtNode = document.createTextNode(child);\n//             ele.appendChild(txtNode);\n//           }else{\n//             ReactDOM.render(child,ele);\n//           }\n//         })\n//       }else{\n//         ele[prop] = props[prop];\n//       }\n//     }\n\n//     // 将第一层DOM节点添加到container中\n//     container.appendChild(ele);\n//   }\n// }\n\n\n\n\n\n  // 1、原生JS，DOM操作（jQ）\n  // 2、React：开发效率高、性能高\n  // 3、环境搭建、创建一个项目、运行\n  // 4、JSX语法\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}